snippet imp
	import ${1:module}

snippet imps
	import ${1:module} (${2:items})

snippet impq
	import qualified ${1:module} as ${2:name}

snippet module 
	module ${1:ModuleName} (
	  ${2:afun}
	) where
	

snippet ::
	${1:funcName} :: ${2:type}
	$1 ${3:args} = ${4:undefined}

snippet =
	${1:funcName} = ${2:body}

snippet data
	${1:TypeName} = ${2:Body}

snippet if
	if ${1:expr}
	    then ${2:whenTrue}
	    else ${3:whenFalse}

snippet case
	case ${1:expr} of
	    ${2:case1}   -> ${3:body1}
	    ${4:otherwise} -> ${5:body2}
